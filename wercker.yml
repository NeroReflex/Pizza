# docker box definition
box: java

# defining the dev pipeline
build:
  steps:
    - install-packages:
        packages: git openssl pkg-config libssl-dev wget zlib1g-dev unzip openssh-client unzip tar
    - script:
        name: Fetching git-lfs
        code: wget https://github.com/github/git-lfs/releases/download/v1.3.0/git-lfs-linux-amd64-1.3.0.tar.gz
    - script:
        name: Extracting git-lfs
        code: |-
          tar -xf git-lfs-linux-amd64-1.3.0.tar.gz
          chmod +x git-lfs-1.3.0/install.sh
    - script:
        name: Installing git-lfs
        code: |-
          cd git-lfs-1.3.0
          ./install.sh
          git lfs install
          cd ../
    - script:
        name: Downloading ant
        code: wget http://apache.panu.it//ant/binaries/apache-ant-1.9.7-bin.zip
    - script:
        name: Extracting ant
        code: |-
          unzip apache-ant-1.9.7-bin.zip
          chmod +x apache-ant-1.9.7/bin/ant
#    - script:
#        name: Getting lfs-stored Files
#        code: git pull
    - script:
        name: Downloading correct jar files
        code: |-
          rm -rf *.jar
          wget https://repo1.maven.org/maven2/org/python/jython-standalone/2.7.0/jython-standalone-2.7.0.jar
          wget https://bitbucket.org/xerial/sqlite-jdbc/downloads/sqlite-jdbc-3.8.11.2.jar
          wget http://www.jibble.org/files/pircbot-1.5.0.zip
          unzip pircbot-1.5.0.zip
          mv -f pircbot-1.5.0/pircbot.jar pircbot.jar
    - script:
        name: Check jar files
        code: |-
          ls -lh jython-standalone-2.7.0.jar
          ls -lh pircbot.jar
          ls -lh sqlite-jdbc-3.8.11.2.jar
    - script:
        name: Building Project
        code: apache-ant-1.9.7/bin/ant -f nbbuild.xml -Dnb.internal.action.name=build jar
deploy :
  steps :
    - install-packages:
        packages: git openssl pkg-config libssl-dev python wget zlib1g-dev unzip openssh-client rsync
    - script:
        name: Downloading PIP
        code: |-
          curl -O https://bootstrap.pypa.io/get-pip.py
          sudo python get-pip.py
    - script:
        name: Testing Python
        code: python --version
    - script:
        name: Testing PIP
        code: pip --version
    - script:
        name: Installing MkDocs
        code: sudo pip install mkdocs
    - script:
        name: Building Documentation
        code: |-
          cd Documentazione
          mkdocs build
          cd ../
    - script:
        name: Configure git
        code: |-
          git config --global user.email "pleasemailus@wercker.com"
          git config --global user.name "werckerbot"
          git config --global push.default matching
    - script:
        name: Deploy to github pages
        code: |-
          cd Documentazione
          git clone -b gh-pages $GIT_REMOTE
          rsync -avh --progress /pipeline/source/Documentazione/site/ ./Pizza
          cd Pizza
          git add .
          git commit -m "deploy commit from $WERCKER_STARTED_BY" --quiet &> /dev/null
          git push --quiet &> /dev/null